{"version":3,"sources":["Item.js","List.js","Form.js","Title.js","App.js","index.js"],"names":["ItemWrap","styled","li","Button","button","props","isDone","DeleteButton","Task","p","Item","React","useState","setIsDone","buttonText","className","content","onClick","deleteTodo","id","ListWrap","ul","List","Items","todos","map","todo","key","FormWrap","div","Form","tmpTodo","setTmpTodo","htmlFor","type","name","onChange","e","target","value","placeholder","preventDefault","addTodo","TitleWrap","Title","AppWrapper","ReactDOM","render","setTodos","length","alert","newTodoItem","newTodos","filter","document","getElementById"],"mappings":"izCAGA,IAAMA,EAAWC,IAAOC,GAAV,KAiBRC,EAASF,IAAOG,OAAV,KACU,SAAAC,GAAK,OAAKA,EAAMC,OAAS,QAAU,WAC9C,SAAAD,GAAK,OAAKA,EAAMC,OAAS,QAAU,WAiBxCC,EAAeN,IAAOG,OAAV,KAWZI,EAAOP,IAAOQ,EAAV,KACW,SAAAJ,GAAK,OAAKA,EAAMC,OAAS,eAAiB,UAGhD,SAASI,EAAKL,GAAQ,IAAD,EACNM,IAAMC,UAAS,GADT,mBAC3BN,EAD2B,KACnBO,EADmB,KAK5BC,EAAaR,EAAS,eAAO,eAEnC,OACE,kBAACN,EAAD,KACE,kBAACQ,EAAD,CAAMF,OAAQA,EAAQS,UAAU,QAC7BV,EAAMW,SAET,oCACE,kBAACb,EAAD,CAAQG,OAAQA,EAAQW,QAVT,kBAAMJ,GAAWP,KAW7BQ,GAEH,kBAACP,EAAD,CACEU,QAAS,WACPZ,EAAMa,WAAWb,EAAMc,MAF3B,kB,8FClER,IAAMC,EAAWnB,IAAOoB,GAAV,KAIC,SAASC,EAAKjB,GAC3B,IAAMkB,EAAQlB,EAAMmB,MAAMC,KAAI,SAAAC,GAAI,OAChC,kBAAChB,EAAD,CACEiB,IAAKD,EAAKP,GACVA,GAAIO,EAAKP,GACTH,QAASU,EAAKV,QACdE,WAAYb,EAAMa,gBAItB,OAAO,kBAACE,EAAD,KAAWG,G,8/BCfpB,IAAMK,EAAW3B,IAAO4B,IAAV,KAqDC,SAASC,EAAKzB,GAAQ,IAAD,EACJM,IAAMC,SAAS,IADX,mBAC3BmB,EAD2B,KAClBC,EADkB,KAGlC,OACE,kBAACJ,EAAD,KACE,8BACE,2BAAOK,QAAQ,YAAf,4BACA,2BACEC,KAAK,OACLC,KAAK,OACLpB,UAAU,YACVI,GAAG,WACHiB,SAAU,SAAAC,GAAC,OAAIL,EAAWK,EAAEC,OAAOC,QACnCA,MAAOR,EACPS,YAAY,uEAEd,4BACEzB,UAAU,MACVE,QAAS,SAAAoB,GACPA,EAAEI,iBACFpC,EAAMqC,QAAQX,EAASC,KAJ3B,kB,2OCrER,IAAMW,EAAY1C,IAAO4B,IAAV,KAYA,SAASe,IACtB,OACE,kBAACD,EAAD,KACE,2C,mPCXN,IAAME,EAAa5C,IAAO4B,IAAV,KCHhBiB,IAASC,OAAO,mBDWD,WAAgB,IAAD,EACFpC,IAAMC,SAAS,IADb,mBACrBY,EADqB,KACdwB,EADc,KAyB5B,OACE,kBAACH,EAAD,KACE,kBAACD,EAAD,MACA,kBAACd,EAAD,CAAMY,QAzBM,SAACX,EAASC,GACxB,GAAID,EAAQkB,OAAS,EACnBC,MAAM,sFADR,CAKA,IAAMC,EAAc,CAClBhC,GAAIK,EAAMyB,OACVjC,QAASe,GAGXiB,EAAS,GAAD,mBAAKxB,GAAL,CAAY2B,KACpBnB,EAAW,QAcT,kBAACV,EAAD,CAAME,MAAOA,EAAON,WAXL,SAAAC,GACjB,IAAMiC,EAAW5B,EAAM6B,QAAO,SAAA3B,GAC5B,OAAOP,IAAOO,EAAKP,MAErB6B,EAASI,SCjCG,MAASE,SAASC,eAAe,W","file":"static/js/main.d9f3e10f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ItemWrap = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  .task {\n    margin: 20px 0;\n    border: 1px solid black;\n    padding: 20px;\n    width: 300px;\n    background-color: white;\n    font-size: 30px;\n  }\n  .buttonWrap {\n    display: flex;\n  }\n`;\n\nconst Button = styled.button`\n  background-color: ${props => (props.isDone ? \"white\" : \"black\")};\n  color: ${props => (props.isDone ? \"black\" : \"white\")};\n  height: 50px;\n  width: 180px;\n  border-radius: 50px;\n  font-size: 30px;\n  box-shadow: 0 5px 0 rgba(136, 136, 136, 1);\n  outline: none;\n  margin-right: 10px;\n  &:hover {\n    cursor: pointer;\n  }\n  &:active {\n    box-shadow: none;\n    transform: translate3d(0, 5px, 0);\n  }\n`;\n\nconst DeleteButton = styled.button`\n  background-color: red;\n  color: black;\n  height: 50px;\n  width: 180px;\n  border-radius: 50px;\n  font-size: 30px;\n  box-shadow: 0 5px 0 rgba(136, 136, 136, 1);\n  outline: none;\n`;\n\nconst Task = styled.p`\n  text-decoration: ${props => (props.isDone ? \"line-through\" : \"none\")};\n`;\n\nexport default function Item(props) {\n  const [isDone, setIsDone] = React.useState(false);\n\n  const toggleIsDone = () => setIsDone(!isDone);\n\n  const buttonText = isDone ? \"戻す\" : \"完了\";\n\n  return (\n    <ItemWrap>\n      <Task isDone={isDone} className=\"task\">\n        {props.content}\n      </Task>\n      <buttonWrap>\n        <Button isDone={isDone} onClick={toggleIsDone}>\n          {buttonText}\n        </Button>\n        <DeleteButton\n          onClick={() => {\n            props.deleteTodo(props.id);\n          }}\n        >\n          削除\n        </DeleteButton>\n      </buttonWrap>\n    </ItemWrap>\n  );\n}\n","import React from \"react\";\nimport Item from \"./Item\";\nimport styled from \"styled-components\";\n\nconst ListWrap = styled.ul`\n  text-align: center;\n`;\n\nexport default function List(props) {\n  const Items = props.todos.map(todo => (\n    <Item\n      key={todo.id}\n      id={todo.id}\n      content={todo.content}\n      deleteTodo={props.deleteTodo}\n    ></Item>\n  ));\n\n  return <ListWrap>{Items}</ListWrap>;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FormWrap = styled.div`\n  padding: 50px 0;\n  .input_box {\n    width: 300px;\n    height: 50px;\n    margin-right: 30px;\n    font-size: 30px;\n    color: black;\n    outline: none;\n    border: 2px solid #ccc;\n    box-shadow: none;\n    transition: all 0.3s;\n    ::placeholder {\n      font-size: 20px;\n      text-align: center;\n      opacity: 0.6;\n    }\n  }\n\n  .input_box:focus {\n    box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.4);\n    border: solid 2px #666;\n    ::placeholder {\n      color: transparent;\n    }\n  }\n\n  label[for=\"addDoing\"] {\n    margin-right: 15px;\n    letter-spacing: 1.5px;\n  }\n\n  .add {\n    height: 50px;\n    width: 180px;\n    border-radius: 50px;\n    background-color: black;\n    color: white;\n    font-size: 30px;\n    box-shadow: 0 5px 0 rgba(136, 136, 136, 1);\n    outline: none;\n  }\n\n  .add:hover {\n    cursor: pointer;\n  }\n\n  .add:active {\n    box-shadow: none;\n    transform: translate3d(0, 3px, 0);\n  }\n`;\n\nexport default function Form(props) {\n  const [tmpTodo, setTmpTodo] = React.useState(\"\");\n\n  return (\n    <FormWrap>\n      <form>\n        <label htmlFor=\"addDoing\">作業内容</label>\n        <input\n          type=\"text\"\n          name=\"todo\"\n          className=\"input_box\"\n          id=\"addDoing\"\n          onChange={e => setTmpTodo(e.target.value)}\n          value={tmpTodo}\n          placeholder=\"ここに入力してください\"\n        ></input>\n        <button\n          className=\"add\"\n          onClick={e => {\n            e.preventDefault();\n            props.addTodo(tmpTodo, setTmpTodo);\n          }}\n        >\n          追加\n        </button>\n      </form>\n    </FormWrap>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TitleWrap = styled.div`\n  width: 100%;\n  padding: 100px 0;\n  font-size: 40px;\n  color: white;\n  background-color: black;\n  text-align: center;\n  h1 {\n    letter-spacing: 4px;\n  }\n`;\n\nexport default function Title() {\n  return (\n    <TitleWrap>\n      <h1>To do List</h1>\n    </TitleWrap>\n  );\n}\n","import React from \"react\";\nimport List from \"./List\";\nimport Form from \"./Form\";\nimport Title from \"./Title\";\nimport \"./reset.css\";\nimport styled from \"styled-components\";\n\nconst AppWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 30px 0;\n  font-family: \"Franklin Gothic Medium\", \"Arial Narrow\", Arial, sans-serif;\n`;\n\nexport default function App() {\n  const [todos, setTodos] = React.useState([]);\n\n  const addTodo = (tmpTodo, setTmpTodo) => {\n    if (tmpTodo.length < 1) {\n      alert(\"作業内容を入力してください\");\n      return;\n    }\n\n    const newTodoItem = {\n      id: todos.length,\n      content: tmpTodo\n    };\n\n    setTodos([...todos, newTodoItem]);\n    setTmpTodo(\"\");\n  };\n\n  const deleteTodo = id => {\n    const newTodos = todos.filter(todo => {\n      return id !== todo.id;\n    });\n    setTodos(newTodos);\n  };\n\n  return (\n    <AppWrapper>\n      <Title></Title>\n      <Form addTodo={addTodo}></Form>\n      <List todos={todos} deleteTodo={deleteTodo}></List>\n    </AppWrapper>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}