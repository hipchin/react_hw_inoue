{"version":3,"sources":["Item.js","List.js","Form.js","Title.js","App.js","index.js"],"names":["ItemWrap","styled","li","Button","button","props","isDone","Task","p","Item","React","useState","setIsDone","buttonText","className","content","onClick","ListWrap","ul","List","todos","map","todo","FormWrap","div","Form","tmpTodo","setTmpTodo","htmlFor","type","name","id","onChange","e","target","value","placeholder","preventDefault","addTodo","TitleWrap","Title","AppWrapper","ReactDOM","render","setTodos","document","getElementById"],"mappings":"4+BAIA,IAAMA,EAAWC,IAAOC,GAAV,KAcRC,EAASF,IAAOG,OAAV,KACU,SAACC,GAAD,OAAYA,EAAMC,OAAS,QAAU,WAChD,SAACD,GAAD,OAAYA,EAAMC,OAAS,QAAU,WAgB1CC,EAAON,IAAOO,EAAV,KACS,SAACH,GAAD,OAAYA,EAAMC,OAAS,eAAiB,UAIhD,SAASG,EAAKJ,GAAQ,IAAD,EACNK,IAAMC,UAAS,GADT,mBAC3BL,EAD2B,KACnBM,EADmB,KAK5BC,EAAaP,EAAS,eAAO,eAEnC,OACE,kBAACN,EAAD,KACE,kBAACO,EAAD,CAAMD,OAAQA,EAAQQ,UAAU,QAAQT,EAAMU,SAC9C,kBAACZ,EAAD,CAAQG,OAAQA,EAAQU,QAPP,kBAAMJ,GAAWN,KAQ/BO,I,8FChDT,IAAMI,EAAWhB,IAAOiB,GAAV,KAIC,SAASC,EAAKd,GAC3B,OACE,kBAACY,EAAD,KACGZ,EAAMe,MAAMC,KAAI,SAAAC,GACf,OAAO,kBAACb,EAAD,CAAMM,QAASO,Q,+4BCT9B,IAAMC,EAAWtB,IAAOuB,IAAV,KAgDC,SAASC,EAAKpB,GAAQ,IAAD,EACJK,IAAMC,SAAS,IADX,mBAC3Be,EAD2B,KAClBC,EADkB,KAGlC,OACE,kBAACJ,EAAD,KACE,8BACE,2BAAOK,QAAQ,YAAf,4BACA,2BACEC,KAAK,OACLC,KAAK,OACLhB,UAAU,YACViB,GAAG,WACHC,SAAU,SAAAC,GAAC,OAAIN,EAAWM,EAAEC,OAAOC,QACnCA,MAAOT,EACPU,YAAY,uEAEd,4BACEtB,UAAU,MACVE,QAAS,SAAAiB,GACPA,EAAEI,iBACFhC,EAAMiC,QAAQZ,EAASC,KAJ3B,kB,2OChER,IAAMY,EAAYtC,IAAOuB,IAAV,KAYA,SAASgB,IACtB,OACE,kBAACD,EAAD,KACE,2C,sMCXN,IAAME,EAAaxC,IAAOuB,IAAV,KCHhBkB,IAASC,OAAO,mBDWD,WAAgB,IAAD,EACFjC,IAAMC,SAAS,IADb,mBACrBS,EADqB,KACdwB,EADc,KAQ5B,OACE,kBAACH,EAAD,KACE,kBAACD,EAAD,MACA,kBAACf,EAAD,CAAMa,QARM,SAACZ,EAASC,GACxBiB,EAAS,GAAD,mBAAKxB,GAAL,CAAYM,KACpBC,EAAW,OAOT,kBAACR,EAAD,CAAMC,MAAOA,OCvBH,MAASyB,SAASC,eAAe,W","file":"static/js/main.bea3e44c.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n\nconst ItemWrap = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  .task {\n    margin: 20px 0;\n    border: 1px solid black;\n    padding: 20px;\n    width: 300px;\n    background-color: white;\n    font-size:30px;\n  }\n`;\n\nconst Button = styled.button`\n  background-color: ${(props) => (props.isDone ? \"white\" : \"black\")};\n  color: ${(props) => (props.isDone ? \"black\" : \"white\")};\n  height: 50px;\n  width: 180px;\n  border-radius: 50px;\n  font-size: 30px;\n  box-shadow: 0 5px 0 rgba(136, 136, 136, 1);\n  outline: none;\n  &:hover {\n    cursor: pointer;\n  }\n  &:active {\n    box-shadow: none;\n    transform: translate3d(0, 5px, 0);\n  }\n`;\n\nconst Task = styled.p`\ntext-decoration: ${(props) => (props.isDone ? \"line-through\" : \"none\")};\n`\n  ;\n\nexport default function Item(props) {\n  const [isDone, setIsDone] = React.useState(false);\n\n  const toggleIsDone = () => setIsDone(!isDone);\n\n  const buttonText = isDone ? \"戻す\" : \"完了\";\n\n  return (\n    <ItemWrap>\n      <Task isDone={isDone} className=\"task\">{props.content}</Task>\n      <Button isDone={isDone} onClick={toggleIsDone}>\n        {buttonText}\n      </Button>\n    </ItemWrap>\n  );\n}\n","import React from \"react\";\nimport Item from \"./Item\";\nimport styled from \"styled-components\";\n\nconst ListWrap = styled.ul`\n  text-align: center;\n`;\n\nexport default function List(props) {\n  return (\n    <ListWrap>\n      {props.todos.map(todo => {\n        return <Item content={todo} />;\n      })}\n    </ListWrap>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FormWrap = styled.div`\n  padding: 50px 0;\n  .input_box {\n    width: 300px;\n    height: 50px;\n    margin-right: 30px;\n    font-size: 30px;\n    color: red;\n    outline: none;\n    border: 2px solid #ccc;\n    box-shadow: none;\n    transition: all 0.3s;\n    ::placeholder{\n      font-size:20px;\n      text-align:center;\n    }\n}\n\n  .input_box:focus {\n    box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.4);\n    border: solid 2px #666;\n  }\n\n  label[for=\"addDoing\"] {\n    margin-right: 15px;\n  }\n\n  .add {\n    height: 50px;\n    width: 180px;\n    border-radius: 50px;\n    background-color: black;\n    color: white;\n    font-size: 30px;\n    box-shadow: 0 5px 0 rgba(136, 136, 136, 1);\n    outline: none;\n  }\n\n  .add:hover {\n    cursor: pointer;\n  }\n\n  .add:active {\n    box-shadow: none;\n    transform: translate3d(0, 3px, 0);\n  }\n`;\n\nexport default function Form(props) {\n  const [tmpTodo, setTmpTodo] = React.useState(\"\");\n\n  return (\n    <FormWrap>\n      <form>\n        <label htmlFor=\"addDoing\">作業内容</label>\n        <input\n          type=\"text\"\n          name=\"todo\"\n          className=\"input_box\"\n          id=\"addDoing\"\n          onChange={e => setTmpTodo(e.target.value)}\n          value={tmpTodo}\n          placeholder=\"ここに入力してください\"\n        ></input>\n        <button\n          className=\"add\"\n          onClick={e => {\n            e.preventDefault();\n            props.addTodo(tmpTodo, setTmpTodo);\n          }}\n        >\n          追加\n        </button>\n      </form>\n    </FormWrap>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TitleWrap = styled.div`\n  width: 100%;\n  padding: 100px 0;\n  font-size: 40px;\n  color: white;\n  background-color: black;\n  text-align: center;\n  h1 {\n    letter-spacing: 4px;\n  }\n`;\n\nexport default function Title() {\n  return (\n    <TitleWrap>\n      <h1>To do List</h1>\n    </TitleWrap>\n  );\n}\n","import React from \"react\";\nimport List from \"./List\";\nimport Form from \"./Form\";\nimport Title from \"./Title\";\nimport \"./reset.css\";\nimport styled from \"styled-components\";\n\nconst AppWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color: lightgray;\n  padding: 30px 0;\n`;\n\nexport default function App() {\n  const [todos, setTodos] = React.useState([]);\n\n  const addTodo = (tmpTodo, setTmpTodo) => {\n    setTodos([...todos, tmpTodo]);\n    setTmpTodo(\"\");\n  };\n\n  return (\n    <AppWrapper>\n      <Title></Title>\n      <Form addTodo={addTodo}></Form>\n      <List todos={todos}></List>\n    </AppWrapper>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}